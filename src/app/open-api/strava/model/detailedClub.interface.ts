/**
 * Strava API v3
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ActivityType } from './activityType.interface';


export interface DetailedClub { 
    /**
     * The club\'s unique identifier.
     */
    id?: number;
    /**
     * Resource state, indicates level of detail. Possible values: 1 -> \"meta\", 2 -> \"summary\", 3 -> \"detail\"
     */
    resource_state?: number;
    /**
     * The club\'s name.
     */
    name?: string;
    /**
     * URL to a 60x60 pixel profile picture.
     */
    profile_medium?: string;
    /**
     * URL to a ~1185x580 pixel cover photo.
     */
    cover_photo?: string;
    /**
     * URL to a ~360x176  pixel cover photo.
     */
    cover_photo_small?: string;
    /**
     * Deprecated. Prefer to use activity_types.
     */
    sport_type?: DetailedClub.SportTypeEnum;
    /**
     * The activity types that count for a club. This takes precedence over sport_type.
     */
    activity_types?: ActivityType[];
    /**
     * The club\'s city.
     */
    city?: string;
    /**
     * The club\'s state or geographical region.
     */
    state?: string;
    /**
     * The club\'s country.
     */
    country?: string;
    /**
     * Whether the club is private.
     */
    'private'?: boolean;
    /**
     * The club\'s member count.
     */
    member_count?: number;
    /**
     * Whether the club is featured or not.
     */
    featured?: boolean;
    /**
     * Whether the club is verified or not.
     */
    verified?: boolean;
    /**
     * The club\'s vanity URL.
     */
    url?: string;
    /**
     * The membership status of the logged-in athlete.
     */
    membership?: DetailedClub.MembershipEnum;
    /**
     * Whether the currently logged-in athlete is an administrator of this club.
     */
    admin?: boolean;
    /**
     * Whether the currently logged-in athlete is the owner of this club.
     */
    owner?: boolean;
    /**
     * The number of athletes in the club that the logged-in athlete follows.
     */
    following_count?: number;
}
export namespace DetailedClub {
    export type SportTypeEnum = 'cycling' | 'running' | 'triathlon' | 'other';
    export const SportTypeEnum = {
        cycling: 'cycling' as SportTypeEnum,
        running: 'running' as SportTypeEnum,
        triathlon: 'triathlon' as SportTypeEnum,
        other: 'other' as SportTypeEnum
    };
    export type MembershipEnum = 'member' | 'pending';
    export const MembershipEnum = {
        member: 'member' as MembershipEnum,
        pending: 'pending' as MembershipEnum
    };
}


