/**
 * Strava API v3
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { SummarySegmentEffort } from './summarySegmentEffort.interface';
import { PolylineMap } from './polylineMap.interface';
import { SummaryPRSegmentEffort } from './summaryPRSegmentEffort.interface';


export interface DetailedSegment { 
    /**
     * The unique identifier of this segment
     */
    id?: number;
    /**
     * The name of this segment
     */
    name?: string;
    activity_type?: DetailedSegment.ActivityTypeEnum;
    /**
     * The segment\'s distance, in meters
     */
    distance?: number;
    /**
     * The segment\'s average grade, in percents
     */
    average_grade?: number;
    /**
     * The segments\'s maximum grade, in percents
     */
    maximum_grade?: number;
    /**
     * The segments\'s highest elevation, in meters
     */
    elevation_high?: number;
    /**
     * The segments\'s lowest elevation, in meters
     */
    elevation_low?: number;
    /**
     * A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.
     */
    start_latlng?: number[];
    /**
     * A pair of latitude/longitude coordinates, represented as an array of 2 floating point numbers.
     */
    end_latlng?: number[];
    /**
     * The category of the climb [0, 5]. Higher is harder ie. 5 is Hors cat√©gorie, 0 is uncategorized in climb_category.
     */
    climb_category?: number;
    /**
     * The segments\'s city.
     */
    city?: string;
    /**
     * The segments\'s state or geographical region.
     */
    state?: string;
    /**
     * The segment\'s country.
     */
    country?: string;
    /**
     * Whether this segment is private.
     */
    'private'?: boolean;
    athlete_pr_effort?: SummaryPRSegmentEffort;
    athlete_segment_stats?: SummarySegmentEffort;
    /**
     * The time at which the segment was created.
     */
    created_at?: string;
    /**
     * The time at which the segment was last updated.
     */
    updated_at?: string;
    /**
     * The segment\'s total elevation gain.
     */
    total_elevation_gain?: number;
    map?: PolylineMap;
    /**
     * The total number of efforts for this segment
     */
    effort_count?: number;
    /**
     * The number of unique athletes who have an effort for this segment
     */
    athlete_count?: number;
    /**
     * Whether this segment is considered hazardous
     */
    hazardous?: boolean;
    /**
     * The number of stars for this segment
     */
    star_count?: number;
}
export namespace DetailedSegment {
    export type ActivityTypeEnum = 'Ride' | 'Run';
    export const ActivityTypeEnum = {
        ride: 'Ride' as ActivityTypeEnum,
        run: 'Run' as ActivityTypeEnum
    };
}


